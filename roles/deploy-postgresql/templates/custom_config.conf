# DB Version: 12
# OS Type: linux
# DB Type: oltp
# Total Memory (RAM): 14 GB
# CPUs num: 2
# Connections num: 100
# Data Storage: ssd

listen_addresses = '*'

{% if server == 'db' %}
port = {{ pgsql_port }}
{% endif %}
{% if server == 'hl7' %}
port = {{ hl7_pgsql_port }}
{% endif %}



#---------------------------------
# Timezone
#---------------------------------
TimeZone = 'Asia/Singapore'

#---------------------------------
# Tune Param ver 9.3
# --------------------------------
temp_buffers = 8MB
bgwriter_delay = 100ms
fsync = on
synchronous_commit = off
commit_delay = 100
commit_siblings = 5
checkpoint_timeout = 900
random_page_cost = 1.5
default_statistics_target = 100

#---------------------------------
# Tune Para ver 12.4
# --------------------------------
{% if server is defined and code_environment is defined and server == 'hl7' and code_environment == 'prod' %}
# DB Version: 12
# OS Type: linux
# DB Type: oltp
# Total Memory (RAM): 10 GB
# CPUs num: 4
# Connections num: 100
# Data Storage: ssd

max_connections = 100
shared_buffers = 2560MB
effective_cache_size = 7680MB
maintenance_work_mem = 640MB
checkpoint_completion_target = 0.9
wal_buffers = 16MB
default_statistics_target = 100
random_page_cost = 1.1
effective_io_concurrency = 200
work_mem = 13107kB
min_wal_size = 1GB
max_wal_size = 4GB
max_worker_processes = 4
max_parallel_workers_per_gather = 2
max_parallel_workers = 4
max_parallel_maintenance_workers = 2

{% elif server is defined and code_environment is defined and server == 'hl7' and code_environment == 'uat' or server == 'db' and code_environment == 'archive_db' %}
# DB Version: 12
# OS Type: linux
# DB Type: oltp
# Total Memory (RAM): 10 GB
# CPUs num: 2
# Connections num: 100
# Data Storage: hdd

max_connections = 100
shared_buffers = 2560MB
effective_cache_size = 7680MB
maintenance_work_mem = 640MB
checkpoint_completion_target = 0.9
wal_buffers = 16MB
default_statistics_target = 100
random_page_cost = 4
effective_io_concurrency = 2
work_mem = 26214kB
min_wal_size = 1GB
max_wal_size = 4GB
max_worker_processes = 2
max_parallel_workers_per_gather = 1
max_parallel_workers = 2
max_parallel_maintenance_workers = 1

{% elif server is defined and code_environment is defined and server == 'db' and code_environment == 'prod'%}
# DB Version: 12
# OS Type: linux
# DB Type: oltp
# Total Memory (RAM): 32 GB
# CPUs num: 6
# Connections num: 100
# Data Storage: ssd

max_connections = 100
shared_buffers = 8GB
effective_cache_size = 24GB
maintenance_work_mem = 2GB
checkpoint_completion_target = 0.9
wal_buffers = 16MB
default_statistics_target = 100
random_page_cost = 1.1
effective_io_concurrency = 200
work_mem = 41943kB
min_wal_size = 2GB
max_wal_size = 8GB
max_worker_processes = 6
max_parallel_workers_per_gather = 3
max_parallel_workers = 6
max_parallel_maintenance_workers = 3

{% elif server is defined and code_environment is defined and server == 'db' and code_environment == 'dr'%}
# DB Version: 12
# OS Type: linux
# DB Type: oltp
# Total Memory (RAM): 8 GB
# CPUs num: 2
# Connections num: 100
# Data Storage: hdd

max_connections = 100
shared_buffers = 2GB
effective_cache_size = 6GB
maintenance_work_mem = 512MB
checkpoint_completion_target = 0.9
wal_buffers = 16MB
default_statistics_target = 100
random_page_cost = 4
effective_io_concurrency = 2
work_mem = 10485kB
min_wal_size = 1GB
max_wal_size = 4GB
max_worker_processes = 6
max_parallel_workers_per_gather = 3
max_parallel_workers = 6
max_parallel_maintenance_workers = 3

{% elif server is defined and code_environment is defined and server == 'db' and code_environment == 'uat' %}
# DB Version: 12
# OS Type: linux
# DB Type: oltp
# Total Memory (RAM): 14 GB
# CPUs num: 2
# Connections num: 100
# Data Storage: hdd

max_connections = 100
shared_buffers = 3584MB
effective_cache_size = 10752MB
maintenance_work_mem = 896MB
checkpoint_completion_target = 0.9
wal_buffers = 16MB
default_statistics_target = 100
random_page_cost = 4
effective_io_concurrency = 2
work_mem = 36700kB
min_wal_size = 1GB
max_wal_size = 4GB
max_worker_processes = 2
max_parallel_workers_per_gather = 1
max_parallel_workers = 2
max_parallel_maintenance_workers = 1

{% elif server is defined and code_environment is defined and server == 'hl7' and code_environment == 'dev' or code_environment == 'sit' %}
# DB Version: 12
# OS Type: linux
# DB Type: oltp
# Total Memory (RAM): 2 GB
# CPUs num: 2
# Connections num: 100
# Data Storage: hdd

max_connections = 100
shared_buffers = 512MB
effective_cache_size = 1536MB
maintenance_work_mem = 128MB
checkpoint_completion_target = 0.9
wal_buffers = 16MB
default_statistics_target = 100
random_page_cost = 4
effective_io_concurrency = 2
work_mem = 5242kB
min_wal_size = 2GB
max_wal_size = 8GB
max_worker_processes = 2
max_parallel_workers_per_gather = 1
max_parallel_workers = 2
max_parallel_maintenance_workers = 1

{% elif server is defined and code_environment is defined and server == 'db' and code_environment == 'dev' or code_environment == 'sit' %}
# DB Version: 12
# OS Type: linux
# DB Type: oltp
# Total Memory (RAM): 2 GB
# CPUs num: 2
# Connections num: 100
# Data Storage: hdd

max_connections = 100
shared_buffers = 512MB
effective_cache_size = 1536MB
maintenance_work_mem = 128MB
checkpoint_completion_target = 0.9
wal_buffers = 16MB
default_statistics_target = 100
random_page_cost = 4
effective_io_concurrency = 2
work_mem = 5242kB
min_wal_size = 2GB
max_wal_size = 8GB
max_worker_processes = 2
max_parallel_workers_per_gather = 1
max_parallel_workers = 2
max_parallel_maintenance_workers = 1

{% endif %}

#----------------------------------
# Autovacuum
# ---------------------------------
autovacuum_max_workers = 5
autovacuum_naptime = 60s
autovacuum_vacuum_threshold = 30
autovacuum_analyze_threshold = 20
autovacuum_vacuum_scale_factor = 0.06
autovacuum_analyze_scale_factor = 0.03
autovacuum_vacuum_cost_delay = 10ms
autovacuum_vacuum_cost_limit = 1000
vacuum_freeze_min_age = 5000000

#-----------------------------------
# Logging
# ----------------------------------
log_destination = 'stderr'
logging_collector = on
log_connections = on
log_disconnections = on

{% if server == 'db' %}
log_directory = '{{ pgsql_log_path }}'
{% endif %}
{% if server == 'hl7' %}
{% if cluster == 'nuh' or  cluster == 'ttsh' %}
log_directory = '{{ pgsql_log_path }}'
{% else %}
log_directory = '{{ hl7_pgsql_log_path }}'
{% endif %}
{% endif %}

#log_directory = '/export/home/hmsdba/data/pg_log'
log_filename = 'postgresql-%Y-%m-%d_%H%M%S.log'
log_rotation_age = 1d
log_rotation_size = 10MB
syslog_facility = 'LOCAL0'
syslog_ident = 'postgres'
log_line_prefix= '[%m-%d : %u : %a : %r : %h : : %p : %l-1]'
log_min_duration_statement=30000
log_file_mode = 0640
log_statement = 'ddl'

#------------------------------------------------------------------------------
## Unix Socket 
#------------------------------------------------------------------------------
unix_socket_directories = '{{ pgsql_socket_path }}, /tmp'
unix_socket_permissions = 0750

#------------------------------------------------------------------------------
## VERSION/PLATFORM COMPATIBILITY
##------------------------------------------------------------------------------
## - Previous PostgreSQL Versions -
backslash_quote = on
standard_conforming_strings = off

#------------------------------------------------------------------------------
# Disable JIT
# jit = off/on
# # -----------------------------------------------------------------------------
jit = on

# #------------------------------------------------------------------------------
# # Streaming Replicating
# # -----------------------------------------------------------------------------

# hot_standby = on (Default is ON)
# wal_level = hot_standby
wal_keep_segments = 256
{% if server == 'db' %}
archive_mode = on
archive_command = '{{ pgbackrest_archive_cmd_db }}'
wal_level = replica
{% elif server == 'hl7' %}
archive_mode = on
archive_command = 'cd .'
wal_level = replica
{% else %}
# archive_mode = on
# archive_command = 'cd .'
{% endif %}

# #------------------------------------------------------------------------------
# # Password Encryption
# # -----------------------------------------------------------------------------
password_encryption = scram-sha-256

# #------------------------------------------------------------------------------
# # Load Shared Libraries
# # -----------------------------------------------------------------------------
shared_preload_libraries = 'pg_stat_statements, pgaudit, set_user'

# #------------------------------------------------------------------------------
# # PgAudit
# # -----------------------------------------------------------------------------
pgaudit.log_catalog = off
pgaudit.log = 'DDL'
pgaudit.log_level = 'notice'
pgaudit.log_client = 'on'
pgaudit.log_relation = 'on'
pgaudit.log_parameter = 'on'

# #------------------------------------------------------------------------------
# #  SSL
# # -----------------------------------------------------------------------------
ssl = on
ssl_cert_file = '{{ conf_ssl_directory }}/pgsql/hmsgeneric.nhg.local.cer'
ssl_key_file = '{{ conf_ssl_directory }}/pgsql/hmsgeneric.nhg.local.key'
ssl_min_protocol_version = 'TLSv1.2'
ssl_max_protocol_version = 'TLSv1.2'
ssl_ciphers = 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!3DES:!MD5:!PSK'
ssl_dh_params_file = '{{ conf_ssl_directory }}/dhparam.pem'