---

## For Validation
- name: Check startup folder exists.
  stat:
    path: "{{ gml_source_path }}/startup"
  register: register_startup_folder


- name: Check symlink for systemd Memcached
  stat:
    path: "/etc/systemd/system/multi-user.target.wants/memcached.service"
  register: register_systemd_memcached
  tags: memcached

- name: Check symlink for systemd PHP-FPM
  stat:
    path: "/etc/systemd/system/multi-user.target.wants/php-fpm.service"
  register: register_systemd_php_fpm

- name: Create startup folder.
  file:
    path: "{{ gml_source_path }}/startup"
    state: directory
    owner: "{{ code_user }}"
    group: "{{ code_user }}"
    mode: '0750'
  when: not register_startup_folder.stat.exists


# Startup for Memcached
- name: Deploy MemCached Startup Script
  template:
    src: memcached.service.j2
    dest: "{{ gml_startup_dir }}/memcached.service"
    mode: 0644
  tags:
    - memcached
    
- name: Copy Memcached startup script to systemd
  command: 'sudo cp {{ gml_source_path }}/startup/memcached.service /usr/lib/systemd/system/'
  tags:
    - memcached
    
- name: Create link for systemd - Memcached
  command: "{{ item }}"
  with_items:
    - 'sudo ln -s /usr/lib/systemd/system/memcached.service /etc/systemd/system/multi-user.target.wants/memcached.service'
    - 'sudo chown root:root /etc/systemd/system/multi-user.target.wants/memcached.service'
    - 'sudo chmod 750 /etc/systemd/system/multi-user.target.wants/memcached.service'
  when: not register_systemd_memcached.stat.exists
  tags:
    - memcached
    
- name: Reload systemd
  command: "{{ sh_systemctl }} daemon-reload"
  tags:
    - memcached

- name: Enable Memcached in Systemctl
  shell: sh -c "{{ sh_memcached_enable }}"
  ignore_errors: true
  tags:
    - memcached

- name: Restart Memcached in Systemctl
  shell: sh -c "{{ sh_memcached_restart }}"
  tags:
    - memcached

# Startup for PHP-FPM
- name: Deploy PHP-FPM Startup Script
  template:
    src: php-fpm.service.j2
    dest: "{{ gml_startup_dir }}/php-fpm.service"
    mode: 0644

- name: Copy PHP-FPM startup script to systemd
  command: 'sudo cp {{ gml_source_path }}/startup/php-fpm.service /usr/lib/systemd/system/'

- name: Create link for systemd - PHP-FPM
  command: "{{ item }}"
  with_items:
    - 'sudo ln -s /usr/lib/systemd/system/php-fpm.service /etc/systemd/system/multi-user.target.wants/php-fpm.service'
    - 'sudo chown root:root /etc/systemd/system/multi-user.target.wants/php-fpm.service'
    - 'sudo chmod 750 /etc/systemd/system/multi-user.target.wants/php-fpm.service'
  when: not register_systemd_php_fpm.stat.exists

- name: Reload systemd
  command: "{{ sh_systemctl }} daemon-reload"

- name: Enable PHP-FPM in Systemctl
  shell: sh -c "{{ sh_fpm_enable }}"
  ignore_errors: true

- name: Restart PHP-FPM in Systemctl
  shell: sh -c "{{ sh_fpm_restart }}"

