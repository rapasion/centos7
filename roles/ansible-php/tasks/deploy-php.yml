---
- name: Check if libjpeg is already installed.
  shell: 'ldconfig -p|grep libjpeg|wc -l'
  register: libjpeg

- name: Install libjpeg RPMs dependencies
  shell: sh -c "sudo rpm -ivh {{ item }}"
  with_items:
    - "{{ playbook_dir }}/downloads/libjpeg-turbo-1.2.90-8.el7.x86_64.rpm"
    - "{{ playbook_dir }}/downloads/libjpeg-turbo-devel-1.2.90-8.el7.x86_64.rpm"
  when: libjpeg.stdout == "0"

- name: Check if libevent is installed
  command: 'rpm -q libevent'
  ignore_errors: true
  register: libevent
- debug: var=libevent

- name: Install libevent
  shell: sh -c "sudo rpm -ivh {{ item }}"
  with_items:
    - "{{playbook_dir}}/downloads/libevent-2.0.21-4.el7.x86_64.rpm"
    - "{{playbook_dir}}/downloads/libevent-devel-2.0.21-4.el7.x86_64.rpm"
  when: libevent.stdout.find('is not installed') != -1

- name: Ensure PHP installation path exists.
  file:
    path: "{{ php_source_install_path }}"
    state: directory
    owner: "{{ code_user }}"
    group: "{{ code_user }}"
    mode: "0750"

# extract source
- name: Extract Source file
  unarchive:
    src: "{{ playbook_dir }}/{{ compressed_dir }}/{{ gml_source_php_file }}"
    dest: "{{ gml_source_path }}"
    owner: "{{ code_user }}"
    group: "{{ code_user }}"
    remote_src: yes

- name: make File executable
  file:
    path: "{{ php_source_install_path }}/bin/{{ item }}"
    owner: "{{ code_user }}"
    group: "{{ code_user }}"
    mode: "0750"
  loop:
    - php
    - php-cgi
    - php-fpm
    - phpdbg

- name: set selinux context for executables
  shell: "sudo semanage fcontext -a -t bin_t '{{ php_source_install_path }}/bin/{{ item }}'"
  loop:
    - php
    - php-cgi
    - phpdbg
    - pecl
    - phar.phar
    - php-config
    - phpize
  tags: 
    - apache-selinux
     
- name: set selinux context for php-fpm
  shell: "sudo semanage fcontext -a -t bin_t '{{ php_source_install_path }}/bin/php-fpm'"
  tags: 
    - apache-selinux 

- name: Set selinux context for php socket
  shell: "sudo semanage fcontext -a -t httpd_var_run_t '{{php_fpm_sockdir}}(/.*)?'"
  tags: 
    - apache-selinux

- name: Ensure php executable is symlinked into a standard path.
  file:
    src: "{{ php_source_install_path }}/bin/{{ item }}"
    dest: "{{ gml_source_path }}/bin/{{ item }}"
    state: link
    owner: "{{ code_user }}"
    group: "{{ code_user }}"
    force: yes
  loop:
    - php
    - php-fpm
    - phpize
    - php-cgi
    - php-config